

1. Introduction
2. Requirements
3. Installing
4. Running
5. Usage 


1. Introduction
---------------
This package installs a Tcl API used to send requests to the Amazon S3 service.
This package is still in development.  Be sure to update often.


2. Requirements 
---------------
    1. AOLserver4.5
    2. TCL 8.4 or greater
    3. tcllib (http://tcllib.sourceforge.net/)
        - sha1
        - md5
        - base64


3. Installation
---------------
Copy the package directory into the AOLserver lib directory. Assumes tcl
was built using the AOLserver lib path as the prefix:

    % cp -r nss3.x.x /usr/local/aolserver/lib


4. Running
----------
At start up, or in the control port, use the tcl "package" command to
load the package:

    nscp 1> package require nss3

    Then configure the package to use your own public and private keys. 
    These values are kept for the life of the thread.  If done at start up 
    in the main thread, the values will persist for the life of the server.
    They will also be included in any threads spawned by the main thread.

    nscp 2> ::nss3::setConfig publicKey "xxxxxxxxxxxxxxxxxxxx" 
    nscp 3> ::nss3::setConfig privateKey "xxxxxxxxxxxxxxxxxxxx"


4. Usage
--------
The ::nss3::wait command works just like the the ns_http wait command.
You can use the -result flag to set the result in a variable and get a
1 or 0 back, or you can not set the result flag and the proc will
return the result. -status and -headers are also provided. -headers
is a setId created by ns_set create. 

4.1 Create a bucket
-------------------

    nscp 4> ::nss3::queue createBucket -bucket mynewbucket
    http0
    nscp 5> ::nss3::wait http0 -result result -status status
    1
    nscp 6> set result 

    nscp 7> set status
    200

4.2 Write an object
-------------------

    nscp 8> ::nss3::queue writeObject -bucket mynewbucket -object mynewobject -data "this is my data"
    http0
    nscp 9> ::nss3::wait http0 -result result -status status
    1
    nscp 10> set result

    nscp 11> set status
    200

4.3 Get an object
-----------------

    nscp 12> ::nss3::queue getObject -bucket mynewbucket -object mynewobject
    http0
    nscp 13> ::nss3::wait http0 -result result -status status
    1
    nscp 14> set result
    this is my data
    nscp 15> set status
    200

    You could also leave out the -result flag and the result will be 
    returned:

    nscp 13> ::nss3::wait http0 -status status
    this is my data
    nscp 15> set status
    200

4.4 List a bucket
-----------------

    nscp 16> ::nss3::queue getObject -bucket mynewbucket
    http0
    nscp 17> ::nss3::wait http0 -result result -status status
    1
    nscp 18> set result
    <?xml version="1.0" encoding="UTF-8"?>...
    nscp 19> set status
    200

4.5 Delete an object
-------------------

    nscp 20> ::nss3::queue deleteObject -bucket mynewbucket -object mynewobject
    http0
    nscp 21> ::nss3::wait http0 -result result -status status
    1
    nscp 22> set result 

    nscp 23> set status
    204
