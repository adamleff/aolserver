This package installs a Tcl API used to send requests to the Amazon S3 service.
This package is still in development.  Be sure to update often.

This package uses a namespace variable to hold configuration options. These
options will persist for the life of the thread or conn. See the RUNNING
section for more information about setting the configuration options after
runnign package require.

The package also uses a global array to hold the current request parameters
and headers.  This array will be cleaned up after the connection.  It is also
explicitly cleaned up at the end of nss3::queue by nss3::cleanRequest.

The only procs that are public are nss3::queue and nss3::wait.  The other
procs are internal and should be considered private.

REQUIREMENTS
------------

    - AOLserver4.5
    - TCL 8.4 or greater
    - tcllib
        - sha1
        - md5
        - base64

INSTALLATION
------------

    Copy the package directory into the AOLserver lib directory. Assumes tcl
    was built using the AOLserver lib path as the prefix:

    % cp -r nss3.x.x /usr/local/aolserver/lib

RUNNING
-------

    At start up, or in the control port, use the tcl "package" command to
    load the package:

    nscp 1> package require nss3
    x.x

    Configure the package to use your own public and private keys. These values
    are kept for the life of the thread.  If done at start up in the -main-
    thread, the values will persist for the life of the server:

    nscp 2> nss3::setConfig publicKey "xxxxxxxxxxxxxxxxxxxx"
    xxxxxxxxxxxxxxxxxxxx

    nscp 3> nss3::setConfig privateKey "xxxxxxxxxxxxxxxxxxxx"
    xxxxxxxxxxxxxxxxxxxx

USAGE
-----

    Create a bucket:

    nscp 4> ::nss3::queue createBucket mynewbucket
    http0
    nscp 5> ::nss3::wait http0 result status
    1
    nscp 6> set result 

    nscp 7> set status
    200

    Write an object:

    nscp 8> ::nss3::queue writeObject mynewbucket mynewobject "this is my data"
    http0
    nscp 9> ::nss3::wait http0 result status
    1
    nscp 10> set result

    nscp 11> set status
    200

    Get an object:

    nscp 12> ::nss3::queue getObject mynewbucket mynewobject
    http0
    nscp 13> ::nss3::wait http0 result status
    1
    nscp 14> set result
    this is my data
    nscp 15> set status
    200

    List a bucket:

    nscp 16> ::nss3::queue getObject mynewbucket
    http0
    nscp 17> ::nss3::wait http0 result status
    1
    nscp 18> set result
    <?xml version="1.0" encoding="UTF-8"?>
    ...xml...
    nscp 19> set status
    200

    Delete an object:

    nscp 20> ::nss3::queue deleteObject mynewbucket mynewobject
    http0
    nscp 21> ::nss3::wait http0 result status
    1
    nscp 22> set result 

    nscp 23> set status
    204
